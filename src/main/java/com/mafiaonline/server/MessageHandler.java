package com.mafiaonline.server;

import java.util.StringTokenizer;

/**
 * MessageHandler ch·ªãu tr√°ch nhi·ªám x·ª≠ l√Ω tin nh·∫Øn t·ª´ client.
 * C√≥ th·ªÉ l√† chat b√¨nh th∆∞·ªùng ho·∫∑c l·ªánh ƒëi·ªÅu khi·ªÉn game (/vote, /kill, /heal...).
 */
public class MessageHandler {
    private final GameRoom gameRoom;

    public MessageHandler(GameRoom gameRoom) {
        this.gameRoom = gameRoom;
    }

    /**
     * X·ª≠ l√Ω tin nh·∫Øn client g·ª≠i l√™n server
     * @param sender t√™n ng∆∞·ªùi g·ª≠i
     * @param msg n·ªôi dung tin nh·∫Øn
     */
    public void handleMessage(String sender, String msg) {
        if (msg == null || msg.trim().isEmpty()) return;

        // N·∫øu b·∫Øt ƒë·∫ßu b·∫±ng "/", coi l√† l·ªánh
        if (msg.startsWith("/")) {
            handleCommand(sender, msg);
        } else {
            // N·∫øu kh√¥ng th√¨ broadcast chat b√¨nh th∆∞·ªùng
            gameRoom.broadcast("üí¨ " + sender + ": " + msg);
        }
    }

    private void handleCommand(String sender, String msg) {
        StringTokenizer st = new StringTokenizer(msg);
        String command = st.nextToken().toLowerCase();

        switch (command) {
            case "/vote": {
                if (st.hasMoreTokens()) {
                    String target = st.nextToken();
                    gameRoom.castVote(sender, target);
                } else {
                    gameRoom.privateMessage(sender, "‚ö†Ô∏è D√πng: /vote <t√™n ng∆∞·ªùi ch∆°i>");
                }
                break;
            }

            case "/kill": {
                if (st.hasMoreTokens()) {
                    String target = st.nextToken();
                    gameRoom.recordNightAction(sender, target);
                } else {
                    gameRoom.privateMessage(sender, "‚ö†Ô∏è D√πng: /kill <t√™n ng∆∞·ªùi ch∆°i>");
                }
                break;
            }

            case "/heal": {
                if (st.hasMoreTokens()) {
                    String target = st.nextToken();
                    gameRoom.recordNightAction(sender, target);
                } else {
                    gameRoom.privateMessage(sender, "‚ö†Ô∏è D√πng: /heal <t√™n ng∆∞·ªùi ch∆°i>");
                }
                break;
            }

            case "/start": {
                gameRoom.startGame();
                break;
            }

            case "/list": {
                gameRoom.printPlayers();
                gameRoom.privateMessage(sender,
                        "üë• C√≥ " + gameRoom.getPlayersAll().size() + " ng∆∞·ªùi trong ph√≤ng.");
                break;
            }

            case "/role": {
                Role r = gameRoom.getPlayerRole(sender);
                if (r != null) {
                    gameRoom.privateMessage(sender, "üé≠ Vai tr√≤ c·ªßa b·∫°n: " + r);
                }
                break;
            }

            default:
                gameRoom.privateMessage(sender,
                        "‚ùì L·ªánh kh√¥ng h·ª£p l·ªá: " + command);
                break;
        }
    }
}
